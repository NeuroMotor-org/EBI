function O=ebi_threshold(I,Thresholds)
% Applies New Thresholds to the Empirical Bayesian Inference Results
%
% Description: Take the output structure generated by ebi.m and generates a
% tiff figure file on disk with several plots
%
% Syntax/Usage:
% O = ebi_report(I,Thresholds)
% I          : Input:  Structure generated by ebi.m 
% Thresholds : a 1 x 4 vector of threshold values [P1, FDR, Beta, Alpha] for Posterior Probability
%              of class 1 (P1), False discovery Rate (FDR), Type II Error Beta and Type I Error Alpha, each between 0 and 1,
%              at which hypotheses are tested and the corresponding values of other measures
%              reported. Default: [0.9 0.05 0.2 0.05]
%
% O          : Output, the I Structure with updated fields 'ThresholdMatrix' and 'H'
%
% Example/sample test/debug command:
% I  = ebi([randn(50,200);randn(50,100),randn(50,100)+1.5],[zeros(50,1);ones(50,1)]); ebi_report(O);
% O = ebi_threshold(I, [0.8 0.1 0.25 0.01]);
%
% Written by:
% Bahman Nasseroleslami, Trinity College Dublin, the University of Dublin, 11/09/2017, nasseroleslami@gmail.com
% Part of the Emprical Bayesian Inference (EBI) toolbox for MATLAB

O=I;

Prlist=I.Prlist;
Posterior=I.Posterior;
EstimatedPriors=I.EstimatedPriors;
EstimatedFDR=I.EstimatedFDR;
EstimatedBeta=I.EstimatedBeta;
EstimatedAlpha=I.EstimatedAlpha;
Nvar=I.Nvar;
% Calculate Thresholds and test Hypoptheses
%               P1Z (Posterior), FDR, Beta, p1, Alpha                        (Estimated Equivalent, Output)
% P1Z
% FDR
% Beta
% p1
% Alpha
% (Given Criterion, Input)

% Calculate the measure at given thresholds
[~,tid]=min(abs(Prlist-Thresholds(1)));
H(1,:)=Posterior(2,:)>=Thresholds(1);
ThresholdMatrix(1,:)=[Thresholds(1), EstimatedFDR(tid), EstimatedBeta(tid), sum(H(1,:))./Nvar, EstimatedAlpha(tid)];

[~,tid]=min(abs(EstimatedFDR-Thresholds(2)));
H(2,:)=Posterior(2,:)>=Prlist(tid);
ThresholdMatrix(2,:)=[Prlist(tid),Thresholds(2), EstimatedBeta(tid), sum(H(2,:))./Nvar, EstimatedAlpha(tid)];

[~,tid]=min(abs(EstimatedBeta-Thresholds(3)));
H(3,:)=Posterior(2,:)>=Prlist(tid);
ThresholdMatrix(3,:)=[Prlist(tid), EstimatedFDR(tid),Thresholds(3), sum(H(3,:))./Nvar, EstimatedAlpha(tid)];

MyP=prctile(Posterior(2,:),EstimatedPriors(1).*100);
 [~,tid]=min(abs(Prlist-MyP));
switch EstimatedPriors(1)
    case 0
        H(4,:)=1;
        ThresholdMatrix(4,:)=[MyP, EstimatedFDR(tid),EstimatedBeta(tid), EstimatedPriors(2), EstimatedAlpha(tid)];
    case 1
        H(4,:)=0;
        ThresholdMatrix(4,:)=[MyP,0,1, EstimatedPriors(2), 0];
    otherwise
        H(4,:)=Posterior(2,:)>=MyP;
        ThresholdMatrix(4,:)=[MyP, EstimatedFDR(tid),EstimatedBeta(tid), EstimatedPriors(2), EstimatedAlpha(tid)];
end

[~,tid]=min(abs(EstimatedAlpha-Thresholds(4)));
H(5,:)=Posterior(2,:)>=Prlist(tid);
ThresholdMatrix(5,:)=[Prlist(tid), EstimatedFDR(tid),EstimatedBeta(tid), sum(H(5,:))./Nvar, Thresholds(4)];

% GenerateOutput
O.ThresholdMatrix=ThresholdMatrix;
O.H=H;
end

% Copyright (c) 2018 Bahman Nasseroleslami, All rights reserved.
% 
% Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
% 
%     Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
%     Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
%     Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. 
% 
% THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.