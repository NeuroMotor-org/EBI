function []=ebi_report(O,varargin)
% Report Generation for Empirical Bayesian Inference (Multiple Comparisons)
%
% Description: Take the output structure generated by ebi.m and generates a
% tiff figure file on disk with several plots
%
% Syntax:
% ebi_report(O,[OutpuFigureFilename])
%
% Usage:
% ebi_report(O)
% ebi_report(O,OutpuFigureFilename)
%
% O : Input:  Structure generated by ebi.m 
% varargin: OutputFigureFilename: string containg the file name (and path)
% for the generated figure. If not provided, it genrates a time-stamped
% file in the current working path
%
% Example:
% ebi_report(O);
% ebi(X,g,'Test','WZ','Thresholds',[0.8 0.1 0.2])
%
% sample test/debug command:
% O=ebi([randn(50,200);randn(50,100),randn(50,100)+1.5],[zeros(50,1);ones(50,1)]); ebi_report(O);
%
% Written by:
% Bahman Nasseroleslami, Trinity College Dublin, the University of Dublin, 27/05/2016, nasserob@tcd.ie, bahman@neuromotor.org
% Revision: 4/8/2017.
% Part of the Emprical Bayesian Inference (EBI) toolbox for MATLAB

plotM=5; % 4 rows
plotN=2; % 2 columns

MyLineWidth=1;
MyFontSize=8;
MyTitleFontSize=10;
close all
fh1=figure('Visible','off');
set(gcf, 'PaperPositionMode', 'manual','PaperUnits', 'centimeters','PaperPosition', [0 0 21 30]);
maxall=max(O.EstimatedDensities(:)).*0.001;
Zplot=find(max(O.EstimatedDensities,[],1)>maxall,1,'first'):find(max(O.EstimatedDensities,[],1)>maxall,1,'last'); % 1:size(O.EstimatedDensities,2);

% Dimensions
subplot(plotM,plotN,1);
thisymax=max([O.Nvar O.Ngroups]);
bar([1 2 3],[O.Nvar O.Ngroups],0.35,'FaceColor', [0 0 0]);
set(gca,'XTickLabel',{'N_{var}', 'm_{0}', 'm_{1}'})
hold on;
text(1,O.Nvar+0.1*thisymax,0,num2str(O.Nvar),'FontSize', MyTitleFontSize,'FontWeight','bold','HorizontalAlignment','Center');
text(2,O.Ngroups(1)+0.1*thisymax,0,num2str(O.Ngroups(1)),'FontSize', MyTitleFontSize,'FontWeight','bold','HorizontalAlignment','Center');
text(3,O.Ngroups(2)+0.1*thisymax,0,num2str(O.Ngroups(2)),'FontSize', MyTitleFontSize,'FontWeight','bold','HorizontalAlignment','Center');
ylim([0 1.2*thisymax])
xlim([0.5 3.5])
set(gca,'FontSize', MyTitleFontSize,'FontWeight','bold','YTick',[]);
title('N''s','FontSize', MyTitleFontSize,'FontWeight','bold');

% create the data table
titleahm = axes('Position',[0.56 0.8 0.4 0.1],'Xlim',[0 1],'Ylim',[0 1],'Box','off','Visible','off','Units','normalized', 'clipping' , 'off');
set(titleahm, 'YTick', [], 'XTick', [], 'YTickLabel', [], 'XTickLabel', []);

myorder=[4 1 2 3 5];
MyFontSizeS=6;
tabd = O.ThresholdMatrix(myorder,myorder);
cnames = {'{\boldmath$p_1$}','{\boldmath$P_1$}','{\boldmath$FDR$}','{\boldmath$\beta$}','{\boldmath$\alpha$}'};
rnames = cellfun(@(x) ['{\boldmath$@$} ' x],cnames,'UniformOutput',0);
del0=0.17;
del=0.15;
for ci=2:6
    text(del0+del*(ci-2),1,0,cnames(ci-1), 'HorizontalAlignment','left','FontWeight','bold','FontSize',MyFontSize, 'Color', [0 0 0],'Interpreter','latex');
    hold on
end

for rowi=2:6
    text(0,1-(rowi-2).*del-del0,0,rnames(rowi-1), 'HorizontalAlignment','left','FontWeight','bold','FontSize',MyFontSize, 'Color', [0 0 0],'Interpreter','latex');
    for ci=2:6
        if ci==rowi
            myweight='bold';
        else
            myweight='normal';
        end
        text((ci-2)*del+del0,1-(rowi-2).*del-del0,0,num2str(tabd(rowi-1,ci-1),2), 'HorizontalAlignment','left','FontWeight',myweight,'FontSize',MyFontSizeS, 'Color', [0 0 0]);
    end
end

% Densities
subplot(plotM,plotN,3);
plot(O.Zlist(Zplot),O.EstimatedDensities(1,Zplot),'Color',[0 0 0],'LineStyle','--','LineWidth',MyLineWidth);
hold on;
plot(O.Zlist(Zplot),O.EstimatedDensities(2,Zplot),'Color',[0 0 0],'LineWidth',MyLineWidth);
plot(O.Zlist(Zplot),O.EstimatedDensities(3,Zplot),'Color',[0.5 0.5 0.5],'LineWidth',MyLineWidth);
legend({'f_0(z)','f_1(z)','f(z)'},'Location','best')
set(gca,'FontSize', MyFontSize);
xlabel('z','FontSize', MyFontSize,'FontWeight','bold');
ylabel('Pr Density','FontSize', MyFontSize,'FontWeight','bold');
title('Density Functions','FontSize', MyTitleFontSize,'FontWeight','bold');

% Posterior
subplot(plotM,plotN,5);
plot(O.Zlist(Zplot),O.EstimatedPosteriors(1,Zplot),'Color',[0 0 0],'LineStyle','--','LineWidth',MyLineWidth);
hold on;
plot(O.Zlist(Zplot),O.EstimatedPosteriors(2,Zplot).','Color',[0 0 0],'LineWidth',MyLineWidth);
ylim([0 1]);
legend({'P_0(z)','P_1(z)'},'Location','best')
set(gca,'FontSize', MyFontSize);
xlabel('z','FontSize', MyFontSize,'FontWeight','bold');
ylabel('Pr','FontSize', MyFontSize,'FontWeight','bold');
title('Posterior Probabilities','FontSize', MyTitleFontSize,'FontWeight','bold');

% Global alpha/Beta
subplot(plotM,plotN,4);
bar([1 2 3],[O.EstimatedPriors(2) O.GlobalAlpha O.GlobalBeta],0.35,'FaceColor', [0 0 0]);
hold on;
plot([0 4],[1 1],'Color','k','LineWidth',0.5,'LineStyle','--')
text(1,O.EstimatedPriors(2)+0.1,0,num2str(O.EstimatedPriors(2),2),'FontSize', MyTitleFontSize,'FontWeight','bold','HorizontalAlignment','Center');
text(2,O.GlobalAlpha+0.1,0,num2str(O.GlobalAlpha,2),'FontSize', MyTitleFontSize,'FontWeight','bold','HorizontalAlignment','Center');
text(3,O.GlobalBeta+0.1,0,num2str(O.GlobalBeta,2),'FontSize', MyTitleFontSize,'FontWeight','bold','HorizontalAlignment','Center');
set(gca,'XTickLabel',{'p_1','\alpha_{global}', '\beta_{global}'})
ylim([0 1.2])
xlim([0.5 3.5])
set(gca,'FontSize', MyTitleFontSize,'FontWeight','bold','YTick',[0 1]);
title('% Affected (Prior p_1) & Glabal Errors','FontSize', MyTitleFontSize,'FontWeight','bold');

% Compact Results (good for quick result figure or inset)
subplot(plotM,plotN,6);
thisymax=round(max(prctile(O.EstimatedBeta(501:1001),95),prctile(O.EstimatedFDR(501:1001),95)),2,'significant');
EBIcrit=4; % p_1
LegMarkerSize=15;
set(gca,'XGrid','off','XMinorGrid','off');
plot(O.Prlist,O.EstimatedFDR,'Color',[0.5 0 0],'LineWidth',1);
hold on
plot(O.Prlist,O.EstimatedBeta,'Color',[0 0.5 0],'LineWidth',1);
plot(O.ThresholdMatrix(EBIcrit,1).*[1 1],[0 1],'Color','k','LineWidth',2)
ball1ah=plot(O.ThresholdMatrix(EBIcrit,1),O.ThresholdMatrix(EBIcrit,2),'Color',[0.5 0 0],'Marker','.','MarkerSize',LegMarkerSize,'LineStyle','none');
ball2ah=plot(O.ThresholdMatrix(EBIcrit,1),O.ThresholdMatrix(EBIcrit,3),'Color',[0 0.5 0],'Marker','.','MarkerSize',LegMarkerSize,'LineStyle','none');
ball3ah=plot([0.5 1],[2 2],'Color',[0 0 0],'LineWidth',2);
ylim([0 thisymax])
xlabel('P_{1,crit}','FontSize',MyFontSize,'FontWeight','bold')
title('EBI','FontSize',MyTitleFontSize,'FontWeight','bold');
if O.ThresholdMatrix(EBIcrit,1)>0.5
    set(gca,'FontSize',MyFontSize,'YTick',[0 thisymax],'Xlim',[0.5 1],'XTick',[0.5 O.ThresholdMatrix(EBIcrit,1) 1],'XTickLabel',{' ',[num2str(O.ThresholdMatrix(EBIcrit,1),2)],'1'},'YTickLabel',{'0',num2str(thisymax,2)}) %#ok<NBRAK>
else
    set(gca,'FontSize',MyFontSize,'YTick',[0 thisymax],'Xlim',[O.ThresholdMatrix(EBIcrit,1)-0.01 1],'XTick',[O.ThresholdMatrix(EBIcrit,1) 0.5 1],'XTickLabel',{[num2str(O.ThresholdMatrix(EBIcrit,1),2)],' ','1'},'YTickLabel',{'0',num2str(thisymax,2)}) %#ok<NBRAK>
end
legend([ball1ah ball2ah ball3ah],{['FDR = ' num2str(O.ThresholdMatrix(EBIcrit,2),'%.2f')],['\beta = ' num2str(O.ThresholdMatrix(EBIcrit,3),'%.2f')],['p_1 = ' num2str(O.ThresholdMatrix(EBIcrit,EBIcrit),'%.2f')]},'Location','best')
text(-0.07,0.5,0,'FDR','HorizontalAlignment','center','FontWeight','bold','FontSize',MyFontSize, 'Color', [0.5 0 0],'Rotation',90,'Units','normalized');
text(1.05,0.5,0,'\beta','HorizontalAlignment','center','FontWeight','bold','FontSize',MyFontSize, 'Color', [0 0.5 0],'Rotation',-90,'Units','normalized');
%set(ah(10,ci),'position',mysubplotpos{10,ci},'XGrid','off','XMinorGrid','off','FontSize',MyFontSize);

% big curves
subplot(plotM,plotN,7:10);
MyLineWidth=3;
thisymax=max([prctile(O.EstimatedBeta(1:1001),95),prctile(O.EstimatedFDR(1:1001),95),prctile(O.EstimatedAlpha(1:1001),95)]);
plot(O.Prlist,O.EstimatedFDR,'Color',[0.5 0 0],'LineStyle','-','LineWidth',MyLineWidth);
hold on;
plot(O.Prlist,O.EstimatedBeta,'Color',[0 0.5 0],'LineStyle','-','LineWidth',MyLineWidth);
% plot(O.Prlist,O.EstimatedAlpha,'Color',[1 0.5 0],'LineStyle','--','LineWidth',MyLineWidth);
ylim([0 thisymax])
xlim([0 1])
set(gca,'FontSize', MyFontSize);
xlabel('P_{1,crit}','FontSize', MyFontSize,'FontWeight','bold');
text(-0.07,0.5,0,'FDR','HorizontalAlignment','center','FontWeight','bold','FontSize',MyFontSize, 'Color', [0.5 0 0],'Rotation',90,'Units','normalized');
text(1.05,0.5,0,'\beta','HorizontalAlignment','center','FontWeight','bold','FontSize',MyFontSize, 'Color', [0 0.5 0],'Rotation',-90,'Units','normalized');
title('Frequentist Measures vs. Threshold Posterior P_{1,crit}','FontSize', MyTitleFontSize,'FontWeight','bold');

crithandle=zeros(1,5);
CritLineWidth=2;
ReflLineWidth=0.5;
% @p1
CritColor=[0 0 0];
crithandle(1)=plot(O.ThresholdMatrix(4,1)*[1 1],[0 O.ThresholdMatrix(4,2)],'Color', CritColor,'LineWidth',CritLineWidth); % prior p1 line
plot([O.ThresholdMatrix(4,1),0],[1 1].*O.ThresholdMatrix(4,2),'Color', CritColor,'LineWidth',ReflLineWidth); % prior p1 - to FDR
plot(O.ThresholdMatrix(4,1)*[1 1],[0 O.ThresholdMatrix(4,3)],'Color', CritColor,'LineWidth',CritLineWidth); % prior p1 line
plot([O.ThresholdMatrix(4,1),1],[1 1].*O.ThresholdMatrix(4,3),'Color', CritColor,'LineWidth',ReflLineWidth); % prior p1 - to Beta

% @FDR
CritColor=[1 0 0];
crithandle(2)=plot(O.ThresholdMatrix(2,1)*[1 1],[0 O.ThresholdMatrix(2,2)],'Color', CritColor,'LineWidth',CritLineWidth); % prior p1 line
plot([O.ThresholdMatrix(2,1),0],[1 1].*O.ThresholdMatrix(2,2),'Color', CritColor,'LineWidth',ReflLineWidth); % prior p1 - to FDR
plot(O.ThresholdMatrix(2,1)*[1 1],[0 O.ThresholdMatrix(2,3)],'Color', CritColor,'LineWidth',CritLineWidth); % prior p1 line
plot([O.ThresholdMatrix(2,1),1],[1 1].*O.ThresholdMatrix(2,3),'Color', CritColor,'LineWidth',ReflLineWidth); % prior p1 - to Beta

% @Beta
CritColor=[0 1 0];
crithandle(3)=plot(O.ThresholdMatrix(3,1)*[1 1],[0 O.ThresholdMatrix(3,2)],'Color', CritColor,'LineWidth',CritLineWidth); % prior p1 line
plot([O.ThresholdMatrix(3,1),0],[1 1].*O.ThresholdMatrix(3,2),'Color', CritColor,'LineWidth',ReflLineWidth); % prior p1 - to FDR
plot(O.ThresholdMatrix(3,1)*[1 1],[0 O.ThresholdMatrix(3,3)],'Color', CritColor,'LineWidth',CritLineWidth); % prior p1 line
plot([O.ThresholdMatrix(3,1),1],[1 1].*O.ThresholdMatrix(3,3),'Color', CritColor,'LineWidth',ReflLineWidth); % prior p1 - to Beta

% @P1
CritColor=[0 0.5 1];
crithandle(4)=plot(O.ThresholdMatrix(1,1)*[1 1],[0 O.ThresholdMatrix(1,2)],'Color', CritColor,'LineWidth',CritLineWidth); % prior p1 line
plot([O.ThresholdMatrix(1,1),0],[1 1].*O.ThresholdMatrix(1,2),'Color', CritColor,'LineWidth',ReflLineWidth); % prior p1 - to FDR
plot(O.ThresholdMatrix(1,1)*[1 1],[0 O.ThresholdMatrix(1,3)],'Color', CritColor,'LineWidth',CritLineWidth); % prior p1 line
plot([O.ThresholdMatrix(1,1),1],[1 1].*O.ThresholdMatrix(1,3),'Color', CritColor,'LineWidth',ReflLineWidth); % prior p1 - to Beta

legend(crithandle(1:4),{['@ p_1 = ' num2str(O.ThresholdMatrix(4,4),'%.2f')],['@ FDR = ' num2str(O.ThresholdMatrix(2,2),'%.2f')],['@ \beta = ' num2str(O.ThresholdMatrix(3,3),'%.2f')],['@ P_1 = ' num2str(O.ThresholdMatrix(1,1),'%.2f')]},'Location','best')

% Title
titleah = axes('Position',[0 0 1 1],'Xlim',[0 1],'Ylim',[0 1],'Box','off','Visible','off','Units','normalized', 'clipping' , 'off');
set(titleah, 'YTick', [], 'XTick', [], 'YTickLabel', [], 'XTickLabel', []);
text(0.5,0.995,0,'Empirical Bayesian Inference Report','HorizontalAlignment','center','VerticalAlignment','top','FontWeight','bold','FontSize',MyTitleFontSize+2, 'Color', [0 0 0]);
if ~isempty(varargin)
    tifffilename=varargin{1};
else
    tifffilename=['Report_EBI_'  cell2mat(arrayfun(@(x) ['_' num2str(x)],fix(clock),'UniformOutput',0))];
end
print(fh1,tifffilename,'-dpng', '-r600');
disp([tifffilename ' was generated.'])
close(fh1);
end

% Copyright (c) 2018-2019 Bahman Nasseroleslami, All rights reserved.
% 
% Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
% 
%     Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
%     Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
%     Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. 
% 
% THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.